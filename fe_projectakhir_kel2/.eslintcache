[{"C:\\Kevin\\BelajarCoding\\Purwadhika\\Project Akhir Kelompok 2\\FE_ProjectAkhir_Kel2\\fe_projectakhir_kel2\\src\\pages\\cart.jsx":"1","C:\\Kevin\\BelajarCoding\\Purwadhika\\Project Akhir Kelompok 2\\FE_ProjectAkhir_Kel2\\fe_projectakhir_kel2\\src\\pages\\admin\\adminreport.jsx":"2"},{"size":69906,"mtime":1607961984130,"results":"3","hashOfConfig":"4"},{"size":27867,"mtime":1607964802037,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"1a35wfn",{"filePath":"9","messages":"10","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Kevin\\BelajarCoding\\Purwadhika\\Project Akhir Kelompok 2\\FE_ProjectAkhir_Kel2\\fe_projectakhir_kel2\\src\\pages\\cart.jsx",["11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32"],"import Axios from 'axios';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { API_URL_SQL } from '../helpers/apiUrl';\r\nimport Logo from './../assets/logo.png'\r\nimport {BiCart,BiUser} from 'react-icons/bi'\r\nimport { Badge } from '@material-ui/core';\r\nimport { FullPageLoading } from '../components/loading';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './cart.css';\r\nimport numeral from 'numeral';\r\nimport { Button} from 'reactstrap';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport ReactImageMagnify from 'react-image-magnify';\r\nimport { namaPertama } from '../helpers/namapertama';\r\nimport Swal from 'sweetalert2';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { FcApprove } from 'react-icons/fc'\r\nimport { AiFillMinusSquare,AiFillPlusSquare } from 'react-icons/ai'\r\nimport Dropzone, {useDropzone} from 'react-dropzone'\r\n\r\n\r\n\r\nconst MsgAddSatuan = ({ nama }) =>{\r\n    console.log(nama)\r\n    return (\r\n        <div style={{display:\"flex\", alignContent:\"center\"}}>\r\n            <div style={{marginRight:5}}>\r\n                <FcApprove size={20} />\r\n            </div>\r\n            <div>\r\n                {nama} berhasil ditambahkan 1\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst MsgEditSatuan = ({ nama,qty,indexs }) =>{\r\n    console.log(nama)\r\n    return (\r\n        <div style={{display:\"flex\", alignContent:\"center\"}}>\r\n            <div style={{marginRight:5}}>\r\n                <FcApprove size={20} />\r\n            </div>\r\n            <div>\r\n                {nama} berhasil diubah menjadi {qty}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n    const MsgEditParcel = ({ nama,indexs }) =>{\r\n        console.log(nama)\r\n            return (\r\n                <div style={{display:\"flex\", alignContent:\"center\"}}>\r\n                    <div style={{marginRight:5}}>\r\n                        <FcApprove size={20} />\r\n                    </div>\r\n                    <div>\r\n                        {indexs}: {nama} berhasil diubah\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\nconst CartPage=()=>{\r\n    const Auth=useSelector(state=>state.Auth) \r\n    const dispatch=useDispatch()\r\n\r\n    const [loading,setLoading]=useState(true)\r\n    const [loadingEdit,setLoadingEdit]=useState(true)\r\n    const [loadingEdit2,setLoadingEdit2]=useState(true)\r\n\r\n    const [showCart,setShowCart]=useState(false)                    // Show Dropdown Caart\r\n    const [showMenuUser,setShowMenuUser]=useState(false)            // Show Dropdown User\r\n    const [showEdit,setShowEdit]=useState(false)\r\n    const [open,setOpen]=useState(0)\r\n\r\n    const [itemEdit,setItemEdit]=useState()                         // Item / Transaksi Detail yg ingin di edit, \r\n    const [komposisiParcel,setKomposisiParcel]=useState([])         // Komposisi parcel saat ini\r\n    const [message,setMessage]=useState()                           // Custom Message\r\n    const [limitProduct,setLimitProduct]=useState([])               // Limit Product per category di Parcel tersebut\r\n    const [listProduct,setListProduct]=useState([])                 // List product dari category yg terpakai\r\n    const [statusPerCategory,setStatusPerCategory]=useState([]) \r\n    const [isAllLimit,setIsAllLimit]=useState()    // Status per category apakah sudah kena limit, 0 atau belum.\r\n    \r\n    const [qtyParcel,setQtyParcel]=useState()                       // qty Parcelnya\r\n    \r\n    // Untuk edit item satuan, bukan yg parcel\r\n    const [editSatuan,setEditSatuan]=useState()             \r\n    const [qtySatuan,setQtySatuan]=useState()\r\n\r\n    const [randomProduct,setRandomProduct]=useState()\r\n    const [overlayProduct,setOverlayProduct]=useState()\r\n\r\n    const [indexparceltoas,setindexparceltoas]=useState()\r\n    const [namaparceltoas,setnamaparceltoas]=useState()\r\n\r\n    // const [listProduk_ID,setListProduk_ID]=useState()\r\n    // const [listProduk_Qty,setListProduk_Qty]=useState()\r\n\r\n\r\n    const toggleModalEdit=()=>setShowEdit(!showEdit)\r\n\r\n    useEffect(()=>{\r\n        console.log(Auth)\r\n        fetchdata()\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        inStatusPerCategory()\r\n    },[komposisiParcel])\r\n\r\n    \r\n    const fetchdata=async()=>{\r\n        try {\r\n            // await Axios.get(`${API_URL_SQL}/transaksi/getcart?user_id=${Auth.id}`)\r\n            Axios.get(`${API_URL_SQL}/transaksi/getcart?user_id=${Auth.id}`)\r\n            .then((res)=>{\r\n                console.log(res.data)\r\n                dispatch({type:'CART',cart:res.data})\r\n            }).catch((err)=>{\r\n                console.log(err)\r\n            })\r\n            Axios.get(`${API_URL_SQL}/product/getRandomProduct/4`)\r\n            .then((res)=>{\r\n                setRandomProduct(res.data)\r\n                setLoading(false)\r\n            }).catch((err)=>{\r\n                console.log(err)\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        console.log(acceptedFiles)\r\n        setImage(acceptedFiles[0])\r\n    }, [])\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n    // Pembayaran\r\n    const [showPembayaran,setShowPembayaran]=useState(false)        // Show PopUp / Modal Pembayaran\r\n    const [image,setImage]=useState()                               // Set Image\r\n\r\n    const clickSendBukti=(transaksi_id,users_id)=>{\r\n        console.log(transaksi_id,users_id)\r\n\r\n        let formData=new FormData()\r\n        let options={\r\n            header:{\r\n                'Content-type':'multipart/form-data'\r\n            }\r\n        }\r\n        formData.append('bukti',image)\r\n        console.log(formData,image)\r\n        formData.append('data',JSON.stringify({transaksi_id:transaksi_id,users_id:users_id}))\r\n\r\n        Axios.post(`${API_URL_SQL}/payment/uploadpaymenttransfer`,formData,options)\r\n        .then((res)=>{\r\n            fetchdata()\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n        })\r\n        setShowPembayaran(!showPembayaran)\r\n    }\r\n\r\n    // End Pembayaran, dataforedit diambil dari transaksi detail yg ingin di edit\r\n\r\n    // Random Product\r\n\r\n    // const notifyAddProductSatuan = () => toast.info(\"ðŸ¦„Wow so easy !\")\r\n    const notifyAddProductSatuan = (namaproduct) => toast.info(<MsgAddSatuan nama={namaproduct}/>)\r\n    const notifyEditProductSatuan = (namaproduct,qty,indexs) => toast.info(<MsgEditSatuan nama={namaproduct} qty={qty} indexs={indexs}/>)\r\n\r\n    const notifyEditProductParcel = (namaproduct,indexs) => toast.info(<MsgEditParcel nama={namaparceltoas} indexs={indexparceltoas}/>)\r\n    \r\n\r\n    const addProductSatuan=async(products_id,namaproduct)=>{\r\n        try {\r\n            let addToBE=await Axios.post(`${API_URL_SQL}/transaksi/addtocartproduct`,{\r\n                user_id:Auth.id,\r\n                products_id:products_id,\r\n                parcel_id:0,\r\n                qty:1,\r\n            })\r\n            console.log(addToBE)\r\n            dispatch({type:\"CART\",cart:addToBE.data})\r\n            notifyAddProductSatuan(namaproduct)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const renderRandomProduct=()=>{\r\n        console.log(randomProduct)\r\n        let render1=randomProduct.productSatuan.map((val,index)=>{\r\n            let unikId=val.id+\"satuan\"\r\n            return (\r\n                <div style={{\r\n                    paddingRight:10,\r\n                    paddingLeft:10,\r\n                    borderRight:\"1px solid whitesmoke\",\r\n                    borderLeft:\"1px solid whitesmoke\",\r\n                    cursor:\"pointer\",\r\n                    position:\"relative\",\r\n                    fontSize:14\r\n                }} onMouseEnter={()=>setOverlayProduct(unikId)} onMouseLeave={()=>setOverlayProduct(\"\")}>\r\n                    <div style={{\r\n                        width:\"100%\",\r\n                        height:\"100%\",\r\n                        backgroundColor:\"rgba(255, 255, 255, 0.5)\",\r\n                        position:\"absolute\",\r\n                        display:overlayProduct==unikId?\"flex\":\"none\",\r\n                        justifyContent:\"center\",\r\n                        alignItems:\"center\",\r\n                        left:0,\r\n                        animation: \"rotateY 500ms ease-in-out forwards\",\r\n                        transformOrigin: \"top center\"\r\n                    }}>\r\n                        <div style={{\r\n                            backgroundColor:\"#66b0ff\",\r\n                            border:\"1px solid whitesmoke\",\r\n                            padding:5,\r\n                            width:\"50%\",\r\n                            borderRadius:5,\r\n                            boxShadow:\"0px 0px 15px 1px lighgrey\",\r\n                            textAlign:\"center\",\r\n                            color:\"white\"\r\n                        }} onClick={()=>addProductSatuan(val.id,val.nama)}>\r\n                            Add\r\n                        </div>\r\n                    </div>\r\n                    <div style={{\r\n                        display:\"flex\",\r\n                        justifyContent:\"center\"\r\n                    }}>\r\n                        <img src={API_URL_SQL+val.image} alt={val.nama} width={80} height={80}/>\r\n                    </div>\r\n                    <div style={{\r\n                        display:\"flex\",\r\n                        justifyContent:\"center\"\r\n                    }}>\r\n                        <span style={{\r\n                            textAlign:\"center\"\r\n                        }}>\r\n                            {val.nama}\r\n                        </span>\r\n                    </div>\r\n                    <div style={{\r\n                        display:\"flex\",\r\n                        justifyContent:\"flex-end\"\r\n                    }}>\r\n                        <span style={{\r\n                            color:\"#fa5a1e\",\r\n                            fontWeight:\"700\"\r\n                        }}>\r\n                            Rp {numeral(val.harga).format('0,0')}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        \r\n        let render2=randomProduct.productParcel.map((val,index)=>{\r\n            let link=`/detailparcel/${val.id}`\r\n            let unikId=val.id+\"parcel\"\r\n            return (\r\n                <div style={{\r\n                    paddingRight:10,\r\n                    paddingLeft:10,\r\n                    borderRight:\"1px solid whitesmoke\",\r\n                    borderLeft:\"1px solid whitesmoke\",\r\n                    cursor:\"pointer\",\r\n                    position:\"relative\",\r\n                    display:\"flex\",\r\n                    flexDirection:\"column\",\r\n                    fontSize:14\r\n                }} onMouseEnter={()=>setOverlayProduct(unikId)} onMouseLeave={()=>setOverlayProduct(\"\")}>\r\n                    <div style={{\r\n                        width:\"100%\",\r\n                        height:\"100%\",\r\n                        backgroundColor:\"rgba(255, 255, 255, 0.5)\",\r\n                        position:\"absolute\",\r\n                        display:overlayProduct==unikId?\"flex\":\"none\",\r\n                        justifyContent:\"center\",\r\n                        alignItems:\"center\",\r\n                        left:0,\r\n                        animation: \"rotateY 500ms ease-in-out forwards\",\r\n                        transformOrigin: \"top center\"\r\n                    }}>\r\n                        \r\n                            <div style={{\r\n                                backgroundColor:\"#66b0ff\",\r\n                                border:\"1px solid whitesmoke\",\r\n                                padding:5,\r\n                                width:\"50%\",\r\n                                borderRadius:5,\r\n                                boxShadow:\"0px 0px 15px 1px lighgrey\",\r\n                                textAlign:\"center\",\r\n                                color:\"white\"\r\n                            }}>\r\n                                <Link to={link} style={{width:\"100%\"}}>\r\n                                    <span style={{color:\"white\",textDecoration:\"none\"}}>Beli</span>\r\n                                </Link>\r\n                            </div>\r\n                    </div>\r\n                    <div style={{\r\n                        display:\"flex\",\r\n                        justifyContent:\"center\"\r\n                    }}>\r\n                        <img src={val.gambar} alt={val.nama} width={80} height={80}/>\r\n                    </div>\r\n                    <div style={{\r\n                        display:\"flex\",\r\n                        justifyContent:\"center\"\r\n                    }}>\r\n                        <span style={{\r\n                            textAlign:\"center\"\r\n                        }}>\r\n                            {val.nama}\r\n                        </span>\r\n                    </div>\r\n                    <div style={{\r\n                        display:\"flex\",\r\n                        justifyContent:\"flex-end\"\r\n                    }}>\r\n                        <span style={{\r\n                            color:\"#fa5a1e\",\r\n                            fontWeight:\"700\"\r\n                        }}>\r\n                            Rp {numeral(val.harga).format('0,0')}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        let final=[render2,render1]\r\n        return final\r\n    }\r\n\r\n    //\r\n    const onClickOpenEditParcel=(dataforedit)=>{\r\n\r\n        setQtyParcel(dataforedit[0].qty)\r\n        setMessage(dataforedit[0].message)\r\n        setLoadingEdit(true)\r\n        setLoadingEdit2(true)\r\n        setItemEdit(dataforedit)\r\n        getLimitProduct(dataforedit)\r\n\r\n        setLoadingEdit(false)\r\n        setShowEdit(!showEdit)        \r\n    }\r\n\r\n    // Mengambil limit yg ditentukan di parcel id yg terpakai\r\n    const getLimitProduct=async(dataforedit)=>{\r\n        try {\r\n            const getlimit= await Axios.get(`${API_URL_SQL}/product/getDataParcelById/${dataforedit[0].parcel_id}`)\r\n\r\n            const arrlimit=getlimit.data.map((val,index)=>{\r\n                return {\r\n                    categoryproduct_id:val.categoryproduct_id,\r\n                    category:val.namaProduct,\r\n                    limitqty:val.qty\r\n                }\r\n            })\r\n            console.log(arrlimit)\r\n            setLimitProduct(arrlimit)\r\n            getProductList(arrlimit,dataforedit)\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    \r\n    // Mengambil list product dari kategori yg ada di limit / yang ada di parcel id\r\n    const getProductList=async(arrlimit,dataforedit)=>{\r\n\r\n        // dari dataforedit di pindah ke komposisiParcel\r\n        const komposisiparcelnow=dataforedit[1].map((val,index)=>{\r\n            return {\r\n                products_id:val.products_id,\r\n                category:val.category,\r\n                nama:val.namaproduct,\r\n                qty:val.qtyproduct/val.qtyparcel\r\n            }\r\n        })\r\n\r\n        setKomposisiParcel(komposisiparcelnow)\r\n\r\n        // Mengambil categoryproduct id dari array limit\r\n        const arrCategoryId=arrlimit.map((val,index)=>{\r\n            return val.categoryproduct_id\r\n        })\r\n\r\n        \r\n\r\n        try {\r\n\r\n            // mengambil product dari masing-masing kategori yg digunakan\r\n            const gettobe=await Axios.post(`${API_URL_SQL}/product/getAllProductByCategory/`,{categoryproduct_id:arrCategoryId})\r\n            console.log(gettobe.data)\r\n            setListProduct(gettobe.data)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Untuk Menentukan Status dari QTY per category apakah limit, 0 atau belum\r\n    const inStatusPerCategory=async()=>{\r\n\r\n        // Memilah dari komposisiParcel dijadikan percategory di dalam saring\r\n        let saring=limitProduct.map((val,index)=>{\r\n            let komposisi=komposisiParcel.filter((filtering)=>{\r\n\r\n                return filtering.category==val.category\r\n            })\r\n\r\n            // Jika ada category yang belum memiliki item sama sekali, maka dibikin qty:0 supaya tidak undefined\r\n            if(komposisi.length==0){\r\n                return [{\r\n                    category:val.category,\r\n                    qty:0\r\n                }]\r\n\r\n            // jika ada item di category tersebut, maka langsung di return\r\n            }else{\r\n                return komposisi\r\n            }\r\n        })\r\n\r\n        // Menjumlah total qty dari item yg ada di category masing-masing yang terpakai di parcel\r\n        let qtypercategory=saring.map((val,index)=>{\r\n            let qty=0\r\n            val.map((value,index)=>{\r\n                qty+=value.qty\r\n            })\r\n            return  {\r\n                category:val[0].category,\r\n                qty:qty\r\n            }\r\n        })\r\n\r\n        // Saatnya ditentukan apakah masing masing kategori sudah kena limit, masih 0 atau belum keduanya.\r\n        let letstatusPerCategory=qtypercategory.map((val,index)=>{\r\n            if(val.qty>=limitProduct[index].limitqty){\r\n                return{\r\n                    categoryproduct_id:limitProduct[index].categoryproduct_id,\r\n                    category:val.category,\r\n                    isAtLimit:true,\r\n                    isAtZero:false\r\n                }\r\n            }else if(val.qty==0){\r\n                return{\r\n                    categoryproduct_id:limitProduct[index].categoryproduct_id,\r\n                    category:val.category,\r\n                    isAtLimit:false,\r\n                    isAtZero:true\r\n                }\r\n            }else{\r\n                return{\r\n                    categoryproduct_id:limitProduct[index].categoryproduct_id,\r\n                    category:val.category,\r\n                    isAtLimit:false,\r\n                    isAtZero:false,\r\n                }\r\n            }\r\n        })\r\n        setLoadingEdit2(false)\r\n        setStatusPerCategory(letstatusPerCategory)\r\n\r\n\r\n        let isAllLimitFind=letstatusPerCategory.find((filtering)=>{\r\n            return filtering.isAtLimit==false\r\n        })\r\n        if(isAllLimitFind==undefined){\r\n            isAllLimitFind={isAtLimit:true}\r\n        }\r\n        let isAllLimit=isAllLimitFind.isAtLimit\r\n        if(isAllLimit!==false){\r\n            isAllLimit=true\r\n        }\r\n        setIsAllLimit(isAllLimit)\r\n\r\n        \r\n    }\r\n\r\n    // Render isi parcel di modal edit\r\n    const renderIsiParcel=()=>{\r\n        console.log(statusPerCategory)\r\n        console.log(komposisiParcel)\r\n        return komposisiParcel.map((val,index)=>{\r\n\r\n            // Untuk menentukan status limit, 0 atau belum di + -\r\n            let status=statusPerCategory.filter((filtering)=>{\r\n                return filtering.category===val.category\r\n            })\r\n\r\n            return(\r\n                <div style={{\r\n                    display:\"flex\",\r\n                    justifyContent:\"space-between\"\r\n                }}>\r\n                    <div style={{\r\n                        display:\"flex\",\r\n                        justifyContent:\"space-between\",\r\n                        flex:3\r\n                    }}>\r\n                        <h6>- {val.nama} </h6>\r\n                    </div>\r\n                    <div style={{\r\n                        display:\"flex\",\r\n                        justifyContent:\"space-around\",\r\n                        flex:1,\r\n\r\n                    }}>\r\n                        <h6>: {val.qty}</h6>\r\n                        <div style={{\r\n                            cursor:\"pointer\",\r\n                            display:status[0].isAtZero?\"none\":\"inline\",\r\n                            fontWeight:\"700\",\r\n                            fontSize:20,\r\n\r\n                        }} onClick={()=>clickMinus(val.nama)}>\r\n                            <AiFillMinusSquare color={\"red\"} style={{verticalAlign:\"0px\"}}/>\r\n                        </div>\r\n                        <div style={{\r\n                            cursor:\"pointer\",\r\n                            display:status[0].isAtLimit?\"none\":\"inline\",\r\n                            fontWeight:\"700\",\r\n                            fontSize:20\r\n                        }}onClick={()=>clickPlus(val.nama,val.category,val.products_id)}>\r\n                            <AiFillPlusSquare color={\"#318ae7\"} style={{verticalAlign:\"0px\"}}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const clickMinus=(nama)=>{\r\n\r\n        let minusInput=komposisiParcel.map((val,index)=>{\r\n\r\n            // Jika nama sesuai, maka -1\r\n            if(val.nama==nama){\r\n                return{...val,qty:val.qty-1}\r\n            \r\n            // Jika tidak maka ya udah\r\n            }else{\r\n                return {...val}\r\n            }\r\n        })\r\n\r\n        // Menghilangkan yg qty 0\r\n        let deletezero=minusInput.filter((filtering)=>{\r\n            return filtering.qty>0\r\n        })\r\n\r\n        setKomposisiParcel(deletezero)\r\n    }\r\n    const clickPlus=(nama,category,products_id)=>{\r\n\r\n        let plusInput=komposisiParcel.map((val,index)=>{\r\n            console.log(val)\r\n            // Jika sesuai maka +1\r\n            if(val.nama==nama){\r\n                Axios.post(`${API_URL_SQL}/product/getdataproductbyid/`,{id:val.products_id})\r\n                .then((res)=>{\r\n                    console.log(val)\r\n                    if(val.qty+1>res.data[0].stok){\r\n                        return Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Stok Kurang',\r\n                            text: `${val.nama} Stok hanya ${res.data[0].stok}`,\r\n                        })\r\n                    }    \r\n                })\r\n                return{...val,qty:val.qty+1}\r\n            }else{\r\n                return {...val}\r\n            }\r\n        })\r\n        let isMax=statusPerCategory.filter((filtering)=>{\r\n            return filtering.category===category\r\n        })\r\n\r\n        let isInKomposisi=komposisiParcel.filter((filtering)=>{\r\n            return filtering.nama===nama\r\n        })\r\n\r\n        // Jika belum limit di category produk tersebut dan produk itu tidak ada, maka tambah produk tersebut\r\n        if(!isMax[0].isAtLimit&&isInKomposisi.length===0){\r\n            let newkomposisi={\r\n                products_id:products_id,\r\n                category:category,\r\n                nama:nama,\r\n                qty:1\r\n            }\r\n            plusInput.push(newkomposisi)\r\n        }\r\n\r\n        setKomposisiParcel(plusInput)\r\n    }\r\n\r\n    // Render product dari kategori yg digunakan\r\n    const renderProductList=()=>{\r\n\r\n        if(statusPerCategory){\r\n            return limitProduct.map((val,index)=>{\r\n                let listprod=listProduct.filter((filtering)=>{\r\n                    return filtering.categoryproduct==val.category\r\n                })\r\n    \r\n                let status=statusPerCategory.filter((filtering)=>{\r\n                    return filtering.category==val.category\r\n                })\r\n    \r\n                // Render Product\r\n                let maplistprod=listprod.map((val,index)=>{\r\n                    return (\r\n                        <div style={{\r\n                            flexBasis:\"20%\",\r\n                            display:\"flex\",\r\n                            flexDirection:\"column\",\r\n                            // justifyContent:\"center\",\r\n                            // alignContent:\"center\",\r\n                            textAlign:\"center\",\r\n                            padding:10,\r\n                            border:\"5px solid #f4f6f8\"\r\n                        }}>\r\n                            <div>\r\n                                <img src={API_URL_SQL+val.image} alt={val.nama} width=\"100\" height=\"100\"/>\r\n                                \r\n                            </div>\r\n                            <div>\r\n                                <h6>{val.nama}</h6>\r\n                            </div>\r\n                            <div style={{\r\n                                display:\"flex\",\r\n                                justifyContent:\"space-around\",\r\n                                fontWeight:\"700\",\r\n                                fontSize:20\r\n                            }}>\r\n                                <div style={{\r\n                                    cursor:\"pointer\",\r\n                                    display:status[0].isAtZero?\"none\":\"inline\"\r\n                                }} onClick={()=>clickMinus(val.nama)}>\r\n                                    <AiFillMinusSquare color={\"red\"}/>\r\n                                </div>\r\n                                <div style={{\r\n                                    cursor:\"pointer\",\r\n                                    display:status[0].isAtLimit?\"none\":\"inline\"\r\n                                }}onClick={()=>clickPlus(val.nama,val.categoryproduct,val.products_id)}>\r\n                                    <AiFillPlusSquare color={\"#318ae7\"}/>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            \r\n                        </div>\r\n                    )\r\n                })\r\n\r\n                // render row masing masing category\r\n                return (\r\n                    <div style={{\r\n                        display:\"flex\",\r\n                        flexDirection:\"column\"\r\n                    }}>\r\n                        <div style={{\r\n                            display:\"flex\",\r\n                            justifyContent:\"space-between\",\r\n                            cursor:\"pointer\"\r\n                        }} onClick={()=>setOpen(index)}>\r\n                            <h5>Pilihan Produk {val.category} :</h5>\r\n                            <span>Click to open</span>\r\n                        </div>\r\n                        <div style={{\r\n                            display:open===index?\"flex\":\"none\",\r\n                            flexWrap:\"wrap\",                        \r\n                        }}>\r\n                            {maplistprod}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        }else{\r\n            return(\r\n                <div>\r\n                    Loading\r\n                </div>\r\n            )\r\n\r\n        }\r\n    }\r\n\r\n    // Render isi cart dropdown\r\n    const renderCart=()=>{\r\n        let arr1= Auth.cart.transaksidetailsatuan.map((val,index)=>{\r\n            return (\r\n                <div style={{\r\n                    display:\"flex\",\r\n                    // justifyContent:\"space-between\",\r\n                    borderBottom:\"1px solid #f3f4f5\",\r\n                    paddingTop:10,\r\n                    paddingBottom:10\r\n                }}>\r\n                    <div style={{\r\n                        marginRight:10\r\n                    }}>\r\n                        <img src={API_URL_SQL+val.image} width=\"50\" height=\"50\"/>\r\n                    </div>\r\n                    <div>\r\n                        <h6>{val.nama}</h6>\r\n                        <h6>Jumlah: {val.qty}</h6>\r\n                    </div>\r\n                    <div style={{\r\n                        display:\"flex\",\r\n                        flexDirection:\"column\",\r\n                        alignItems:\"flex-end\",\r\n                        position:\"absolute\",\r\n                        right:30\r\n                    }}>\r\n                        <h6>Total</h6>\r\n\r\n                        <span style={{\r\n                            color:\"#fa5a1e\",\r\n                            fontWeight:\"700\"\r\n                        }}>\r\n                            Rp {numeral(val.hargatotal).format('0,0')}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        let arr2= Auth.cart.transaksiparcel.map((val,index)=>{\r\n            return (\r\n                <div style={{\r\n                    display:\"flex\",\r\n                    // justifyContent:\"space-between\",\r\n                    borderBottom:\"1px solid #f3f4f5\",\r\n                    paddingTop:10,\r\n                    paddingBottom:10\r\n                }}>\r\n                    <div style={{\r\n                        marginRight:10\r\n                    }}>\r\n                        <img src={val.gambar} width=\"50\" height=\"50\"/>\r\n                    </div>\r\n                    <div>\r\n                        <h6>{val.nama}</h6>\r\n                        <h6>Jumlah: {val.qty}</h6>\r\n                    </div>\r\n                    <div style={{\r\n                        display:\"flex\",\r\n                        flexDirection:\"column\",\r\n                        alignItems:\"flex-end\",\r\n                        position:\"absolute\",\r\n                        right:30\r\n                    }}>\r\n                        <h6>Total</h6>\r\n                        <span style={{\r\n                            color:\"#fa5a1e\",\r\n                            fontWeight:\"700\"\r\n                        }}>\r\n                            Rp {numeral(val.hargatotal).format('0,0')}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        let final=[arr2,arr1]\r\n        return final\r\n    }\r\n\r\n    // Render isi cart di cartPage\r\n    const renderCartDetail=()=>{\r\n        let arr1= Auth.cart.transaksidetailsatuan.map((val,index)=>{\r\n            return (\r\n                <div style={{\r\n                    display:\"flex\",\r\n                    // justifyContent:\"space-between\",\r\n                    borderBottom:\"5px solid #f3f4f5\",\r\n                    paddingTop:10,\r\n                    paddingBottom:100,\r\n                    // backgroundColor:\"wheat\",\r\n                    height:100\r\n                }}>\r\n                    <div style={{\r\n                        marginRight:10\r\n                    }}>\r\n                        <img src={API_URL_SQL+val.image} width=\"50\" height=\"50\"/>\r\n                    </div>\r\n                    <div>\r\n                        <h6>{val.nama}</h6>\r\n                        {\r\n                            editSatuan===val.transaksidetail_id?\r\n                            <h6>\r\n                                Jumlah: \r\n                                <input onChange={(e)=>{\r\n                                    if(e.target.value<=0){\r\n                                        setQtySatuan(1)\r\n                                    }else{\r\n                                        setQtySatuan(e.target.value)\r\n                                    }\r\n                                }} type=\"number\" defaultValue={val.qty} value={qtySatuan}\r\n                                style={{marginLeft:20,width:50, border:\"lighgray 1px solid\",outline:\"#f4f6f8\"}}/>\r\n                            </h6>\r\n                            :\r\n                            <h6>Jumlah: {val.qty}</h6>\r\n\r\n                        }\r\n                    </div>\r\n                    <div style={{\r\n                        display:\"flex\",\r\n                        flexDirection:\"column\",\r\n                        alignItems:\"flex-end\",\r\n                        position:\"absolute\",\r\n                        right:30\r\n                    }}>\r\n                        <div style={{\r\n                            borderBottom:\"1px #f3f4f5 solid\",\r\n                            cursor:\"default\",\r\n                            marginBottom:10\r\n                        }}>\r\n                            {\r\n                                editSatuan===val.transaksidetail_id?\r\n                                <>\r\n                                    <h6><span style={{color:\"#158ae6\",cursor:\"pointer\"}} onClick={(e)=>{\r\n                                        e.preventDefault()\r\n                                        setEditSatuan(!editSatuan)\r\n                                        clickSaveSatuan(val.products_id,val.transaksidetail_id,val.nama,qtySatuan,index)\r\n                                        }}>Save</span>\r\n                                        | \r\n                                    <span style={{color:\"red\",cursor:\"pointer\"}} \r\n                                    onClick={()=>setEditSatuan()}> Cancel</span></h6>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <h6><span style={{color:\"#158ae6\",cursor:\"pointer\"}} onClick={()=>{\r\n                                        setItemEdit(val);setQtySatuan(val.qty);setEditSatuan(val.transaksidetail_id)\r\n                                        }}>Edit </span>\r\n                                        | \r\n                                    <span style={{color:\"red\",cursor:\"pointer\"}} \r\n                                    onClick={()=>onClickRemove(val.transaksi_id,val.transaksidetail_id)}> Remove</span></h6>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                        <h6>Total</h6>  \r\n                        <span style={{\r\n                            color:\"#fa5a1e\",\r\n                            fontWeight:\"700\"\r\n                        }}>\r\n                            Rp {numeral(val.hargatotal).format('0,0')}\r\n                        </span>                        \r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        let arr2= Auth.cart.transaksiparcel.map((val,index)=>{\r\n            let detailparcel=Auth.cart.transaksidetailparcel.filter((filtering)=>{\r\n                return filtering.transaksidetail_id===val.transaksidetail_id\r\n            })\r\n            let renderdetailparcel=detailparcel.map((detail,index)=>{\r\n                return(\r\n                    <div style={{\r\n                        display:\"flex\"\r\n                    }}>\r\n                        <div>\r\n                            <h6>- {detail.namaproduct} : {detail.qtyproduct/detail.qtyparcel}</h6>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n            let dataforedit=[val,detailparcel]\r\n            return (\r\n                <div style={{\r\n                    display:\"flex\",\r\n                    // justifyContent:\"space-between\",\r\n                    borderBottom:\"5px solid #f3f4f5\",\r\n                    paddingTop:10,\r\n                    paddingBottom:20,\r\n                    marginBottom:10\r\n                }}>\r\n                    <div style={{\r\n                        marginRight:10\r\n                    }}>\r\n                        <img src={val.gambar} width=\"50\" height=\"50\"/>\r\n                    </div>\r\n                    <div style={{\r\n                        display:\"flex\",\r\n                        flexDirection:\"column\"\r\n                    }}>\r\n                        <h6>{index+1}: {val.nama}</h6>\r\n                        <h6>Isi Parcel</h6>\r\n                        <div style={{\r\n                            marginLeft:10,\r\n                            display:\"flex\",\r\n                            flexDirection:\"column\"\r\n                        }}>\r\n                            {renderdetailparcel}\r\n                        </div>\r\n                        <h6>Jumlah Parcel: {val.qty}</h6>\r\n                        <h6>Message Custom:</h6>\r\n                        <div style={{\r\n                            border:\"3px #f3f4f5 solid\",\r\n                            padding:20,\r\n                            marginTop:10,\r\n                            width:500,\r\n                            // height:\"fit-content\",\r\n                        }}>\r\n                            <p style={{wordWrap:\"break-word\"}}>\r\n                                {val.message}\r\n                            </p> \r\n                        </div>\r\n                    </div>\r\n                    <div style={{\r\n                        display:\"flex\",\r\n                        flexDirection:\"column\",\r\n                        alignItems:\"flex-end\",\r\n                        position:\"absolute\",\r\n                        right:30,\r\n                    }}>\r\n                        <div style={{\r\n                            borderBottom:\"1px #f3f4f5 solid\",\r\n                            cursor:\"default\",\r\n                            marginBottom:10\r\n                        }}> \r\n                            <h6><span style={{color:\"#158ae6\",cursor:\"pointer\"}} onClick={()=>{setnamaparceltoas(val.nama);setindexparceltoas(index+1);onClickOpenEditParcel(dataforedit)}}>Edit</span> | \r\n                            <span style={{color:\"red\",cursor:\"pointer\"}} onClick={()=>onClickRemove(val.transaksi_id,val.transaksidetail_id)}> Remove</span></h6>\r\n                        </div>\r\n                        <h6>Total</h6>\r\n                        <span style={{\r\n                            color:\"#fa5a1e\",\r\n                            fontWeight:\"700\"\r\n                        }}>\r\n                            Rp {numeral(val.hargatotal).format('0,0')}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        let final=[arr2,arr1]\r\n        return final\r\n    }\r\n\r\n    const onClickRemove=(transaksi_id,transaksidetail_id)=>{\r\n        try {\r\n            Axios.post(`${API_URL_SQL}/transaksi/removefromcart`,{\r\n                transaksi_id:transaksi_id,\r\n                transaksidetail_id:transaksidetail_id,\r\n                user_id:Auth.id\r\n            })\r\n            .then((res)=>{\r\n                dispatch({type:'LOGIN',cart:res.data})\r\n                setLoading(false)\r\n            })\r\n        } catch (error) {\r\n        }\r\n    }\r\n    \r\n    const clickSaveSatuan=(products_id,transaksidetail_id,nama,qty,indexs)=>{\r\n        Axios.post(`${API_URL_SQL}/product/getdataproductbyid/`,{id:products_id})\r\n        .then((res)=>{\r\n            console.log(res.data)\r\n            if(qtySatuan>res.data[0].stok){\r\n                setEditSatuan()\r\n                return Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Stok Kurang',\r\n                    text: `${nama} Stok hanya ${res.data[0].stok}`,\r\n                    footer: '<a href>Why do I have this issue?</a>'\r\n                    })\r\n            }else{\r\n                let senttobe={\r\n                    user_id:`${Auth.id}`,\r\n                    products_id:`${products_id}`,\r\n                    parcel_id:`0`,\r\n                    qty:`${qtySatuan}`,\r\n                    transaksidetail_id:`${transaksidetail_id}`\r\n                }\r\n                Axios.post(`${API_URL_SQL}/transaksi/addtocart`,senttobe)\r\n                .then((res)=>{\r\n                    console.log(res.data)\r\n                    dispatch({type:'CART',cart:res.data})\r\n                    notifyEditProductSatuan(nama,qty,indexs)\r\n                }).catch((err)=>{\r\n                    console.log(err)\r\n                })\r\n            }\r\n        })\r\n    }\r\n    const onClickSaveParcel=(transaksidetail_id,parcel_id,indexs)=>{\r\n        console.log(komposisiParcel)\r\n\r\n        if(!isAllLimit){\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Sorry',\r\n                text: 'Isi Parcel Belum Penuh!',\r\n              })\r\n        }\r\n        else{\r\n            let products_id=komposisiParcel.map((val,index)=>{\r\n                return val.products_id\r\n            })\r\n    \r\n            let product_qty=komposisiParcel.map((val,index)=>{\r\n                return val.qty\r\n            })\r\n            console.log(products_id)\r\n            let senttobe={\r\n                user_id:`${Auth.id}`,\r\n                products_id:`0`,\r\n                parcel_id:`${parcel_id}`,\r\n                qty:`${qtyParcel}`,\r\n                productforparcel_id:products_id,\r\n                qtyproductforparcel:product_qty,\r\n                message:message,\r\n                transaksidetail_id:`${transaksidetail_id}`\r\n            }\r\n            console.log(senttobe)\r\n            Axios.post(`${API_URL_SQL}/transaksi/addtocart`,senttobe)\r\n            .then((res)=>{\r\n                console.log(res.data)\r\n                dispatch({type:'CART',cart:res.data})\r\n                setShowEdit(!showEdit)\r\n                notifyEditProductParcel()\r\n            }).catch((err)=>{\r\n                setShowEdit(!showEdit)\r\n                console.log(err)\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    if(loading){\r\n        return(\r\n            <div className='d-flex justify-content-center align-items-center' style={{height:\"100vh\", width:\"100vw\"}}>\r\n                {FullPageLoading(loading,100,'#0095DA')}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if(!Auth.isLogin){\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return(\r\n        <div style={{\r\n            display:\"flex\",\r\n            flexDirection:\"column\",\r\n            width:\"100%\",\r\n            maxWidth:2000,\r\n            justifyContent:\"center\",\r\n        }}>\r\n            <ToastContainer\r\n                position=\"bottom-right\"\r\n                autoClose={2000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            {/* MODAL Pembayaran */}\r\n            {\r\n                showPembayaran?\r\n                <>\r\n                    <div style={{\r\n                        height:\"100%\",\r\n                        width:\"100%\",\r\n                        backgroundColor:\"rgba(0, 0, 0, 0.5)\",\r\n                        position:\"fixed\",\r\n                        zIndex:2,\r\n                        top:0\r\n                    }} onClick={()=>setShowPembayaran(!showPembayaran)}>\r\n                    </div>\r\n                    <div style={{\r\n                        backgroundColor:\"white\",\r\n                        width:\"50%\",\r\n                        // minHeight:\"70%\",\r\n                        height:\"fit-content\",\r\n                        display:\"flex\",\r\n                        flexDirection:\"column\",\r\n                        borderRadius:10,\r\n                        position:\"fixed\",\r\n                        zIndex:3,\r\n                        margin: \"auto\", /* Will not center vertically and won't work in IE6/7. */\r\n                        left: 0,\r\n                        right: 0,\r\n                        top:0,\r\n                        bottom:0,\r\n                        animation: \"rotateY 500ms ease-in-out forwards\",\r\n                        transformOrigin: \"top center\"\r\n                    }}>\r\n                        <div style={{\r\n                            borderBottom:\"10px solid #f4f6f8\",\r\n                            padding:20\r\n                        }}>\r\n                            <div style={{\r\n                                display:\"flex\",\r\n                                justifyContent:\"space-between\"\r\n                            }}>\r\n                                <h3>Pembayaran</h3>\r\n                                <span style={{\r\n                                    color:\"#fa5a1e\",\r\n                                    fontWeight:\"700\",\r\n                                    fontSize:20\r\n                                }}>\r\n                                    {Auth.cart.transaksi.length==1?\r\n                                        <>\r\n                                            Total : Rp {numeral(Auth.cart.transaksi[0].totaltransaksi).format('0,0')}\r\n                                        </>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{\r\n                            display:\"flex\",\r\n                            width:\"100%\",\r\n                        }}>\r\n                            {/* <div style={{\r\n                                width:\"30%\",\r\n                                borderRight:\"10px solid #f4f6f8\",\r\n                                padding:20\r\n                            }}>\r\n                                <div style={{\r\n                                    padding:10\r\n                                }}>\r\n                                    Transfer\r\n                                </div>\r\n                            </div> */}\r\n                            <div style={{\r\n                                padding:20,\r\n                                display:\"flex\",\r\n                                flexDirection:\"column\",\r\n                                // justifyContent:\"center\",\r\n                                // alignItems:\"center\",\r\n                                height:\"100%\",\r\n                                width:\"70%\"\r\n                            }}>\r\n                                <div style={{padding:5}}>\r\n                                    <h4>Pembayaran Dengan Transfer</h4>\r\n                                </div>\r\n                                <div style={{padding:5}}> \r\n                                    <h6>Silakan transfer ke Rekening</h6>\r\n                                    <span>- Bank ABCD No.Rekening: 1310025105 A/n hearttoheart</span>\r\n                                </div>\r\n                                <div style={{padding:5}}>\r\n                                    <h6>Upload Bukti Pembayaran :</h6>\r\n                                </div>\r\n                                <div style={{padding:5}}>  \r\n                                    <div {...getRootProps()}>\r\n                                        <input {...getInputProps()} />\r\n                                        {\r\n                                        isDragActive ?\r\n                                            <p>Drop the files here ...</p> :\r\n                                            <p>Drag 'n' drop some files here, or click to select files</p>\r\n                                        }\r\n                                    </div>\r\n\r\n                                    {/* <input onChange={(e)=>{console.log(e.target.files);setImage(e.target.files[0])}} type=\"file\"/> */}\r\n                                    {\r\n                                        image?\r\n                                        <ReactImageMagnify {...{\r\n                                            smallImage: {\r\n                                                alt: 'Payment',\r\n                                                // isFluidWidth: true,\r\n                                                width:50,\r\n                                                height:100,\r\n                                                src: URL.createObjectURL(image)\r\n                                            },\r\n                                            largeImage: {\r\n                                                src: URL.createObjectURL(image) ,\r\n                                                width:800,\r\n                                                height: 800\r\n                                            },\r\n                                            enlargedImageContainerDimensions:{\r\n                                                width:\"1600%\",\r\n                                                height:\"300%\"\r\n                                            }\r\n                                        }} />\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                                <div style={{padding:5}}>\r\n                                    <Button color=\"primary\" onClick={()=>clickSendBukti(Auth.cart.transaksi[0].id,Auth.id)}>Upload Bukti Pembayaran</Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n                \r\n                \r\n                :\r\n                null\r\n            }\r\n            {/* End Modal Pembayaran */}\r\n            {/* MODAL EDIT */}\r\n            {\r\n                showEdit?\r\n                <>\r\n                    <div style={{\r\n                        height:\"100%\",\r\n                        width:\"100%\",\r\n                        backgroundColor:\"rgba(0, 0, 0, 0.5)\",\r\n                        position:\"fixed\",\r\n                        zIndex:2,\r\n                        top:0\r\n                    }} onClick={toggleModalEdit}>\r\n                    </div>\r\n                    <div style={{\r\n                        backgroundColor:\"white\",\r\n                        width:\"70%\",\r\n                        // minHeight:\"70%\",\r\n                        height:\"fit-content\",\r\n                        display:\"flex\",\r\n                        flexDirection:\"column\",\r\n                        borderRadius:10,\r\n                        position:\"fixed\",\r\n                        zIndex:3,\r\n                        margin: \"auto\", /* Will not center vertically and won't work in IE6/7. */\r\n                        left: 0,\r\n                        right: 0,\r\n                        top:0,\r\n                        bottom:0,\r\n                        animation: \"rotateY 500ms ease-in-out forwards\",\r\n                        transformOrigin: \"top center\"\r\n                    }}>\r\n                        <div style={{\r\n                            padding:20,\r\n                            paddingBottom:10,\r\n                            width:\"100%\",\r\n                            alignSelf:\"center\",\r\n                            display:\"flex\",\r\n                            justifyContent:\"space-between\",\r\n                            borderBottom:\"10px solid #f4f6f8\"\r\n                        }}>\r\n                            <div style={{\r\n                                display:\"flex\"\r\n                            }}>\r\n                                <h4>{itemEdit[0].nama}</h4>\r\n                                <div style={{\r\n                                    marginLeft:20\r\n                                }}>\r\n                                    Ganti Qty : <input onChange={(e)=>{\r\n                                        if(e.target.value<=0){\r\n                                            setQtyParcel(1)\r\n                                        }else{\r\n                                            setQtyParcel(e.target.value)\r\n                                        }\r\n                                    }} value={qtyParcel} type=\"number\" defaultValue={itemEdit[0].qty} style={{width:50, border:\"none\",outline:\"none\"}}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div>\r\n                                <Button color=\"primary\" onClick={()=>onClickSaveParcel(itemEdit[0].transaksidetail_id,itemEdit[0].parcel_id)} style={{marginRight:10}}>Save</Button>\r\n                                <Button color=\"secondary\" onClick={toggleModalEdit}>Cancel</Button>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{\r\n                            display:\"flex\",\r\n                            flexBasis:\"100%\"\r\n                        }}>\r\n                            <div style={{\r\n                                flexBasis:\"70%\",\r\n                                padding:10\r\n                            }}>\r\n                                {\r\n                                    loadingEdit?\r\n                                    <Skeleton variant=\"text\" width={\"100%\"} height={118} />\r\n                                    :\r\n                                    renderProductList()\r\n                                    \r\n                                }\r\n                            </div>\r\n                            <div style={{\r\n                                flexBasis:\"30%\",\r\n                                height:\"fit-content\",\r\n                                borderLeft:\"10px solid #f4f6f8\",\r\n                            }}>\r\n                                <div style={{\r\n                                    display:\"flex\",\r\n                                    flexDirection:\"column\",\r\n                                    padding:20,\r\n                                    height:\"fit-content\"\r\n                                }}>\r\n                                    <div>\r\n                                        Isi Parcel:\r\n                                    </div>\r\n                                    <div>\r\n                                    {\r\n                                        loadingEdit2?\r\n                                        <Skeleton variant=\"text\" width={\"100%\"} height={118} />\r\n                                        :\r\n                                        renderIsiParcel()\r\n                                    }\r\n                                    </div>\r\n                                    {\r\n                                        loadingEdit?\r\n                                        <Skeleton variant=\"text\" width={\"100%\"} height={118} />\r\n                                        :\r\n                                        <>\r\n                                            <div>\r\n                                                Message Custom:\r\n                                            </div>\r\n                                            <textarea onChange={(e)=>setMessage(e.target.value)} maxLength={500} type=\"text\" defaultValue={itemEdit[0].message} style={{width:\"100%\", minHeight:200,maxHeight:400}}/>\r\n                                        </>\r\n                                    }\r\n                                    <div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </>\r\n                :\r\n                null\r\n            }\r\n            {/* End Modal Edit */}\r\n            <div style={{\r\n                display:\"flex\",\r\n                justifyContent:\"space-between\",\r\n                backgroundColor:\"#158ae6\",\r\n                padding:15,\r\n                color:\"white\",\r\n                position:\"fixed\",\r\n                top:0,\r\n                width:\"100%\",\r\n                maxWidth:2000,\r\n                zIndex:1}}>\r\n                <div style={{\r\n                    marginLeft:20\r\n                }}>\r\n                    <Link to=\"/\">\r\n                        <img src={Logo} alt=\"logo\" width=\"145px\" color=\"black\"/>\r\n                    </Link>\r\n                </div>\r\n                <div style={{\r\n                    display:\"flex\",\r\n                    justifyContent:\"flex-end\",\r\n                    alignItems:\"center\",\r\n                    flexBasis:\"13%\"}}>\r\n                    <div style={{\r\n                        position:\"relative\",marginRight:10}} onMouseEnter={()=>setShowCart(true)} onMouseLeave={()=>setShowCart(false)}>\r\n                        <Badge color=\"error\" badgeContent={Auth.cart.transaksiparcel.length+Auth.cart.transaksidetailsatuan.length}>\r\n                            <BiCart color=\"white\" size=\"20\" style={{cursor:\"pointer\"}}/>\r\n                        </Badge>\r\n                        <div style={{\r\n                            position:\"absolute\",\r\n                            display:showCart?\"block\":\"none\",\r\n                            right:-100,\r\n                            paddingTop:10,\r\n                            width:350,\r\n                            \r\n                        }}>\r\n                            <div style={{\r\n                                border:'1 solid white',\r\n                                borderBottomLeftRadius:10,\r\n                                borderBottomRightRadius:10,\r\n                                color:\"black\",\r\n                                padding:10,\r\n                                paddingLeft:20,\r\n                                paddingRight:20,\r\n                                boxShadow:\"#f3f4f5 0px 3px 5px 1px\",\r\n                                backgroundColor:\"white\",\r\n                                display:\"flex\",\r\n                                flexDirection:\"column\",\r\n                                animation: \"growOut 500ms ease-in-out forwards\",\r\n                                transformOrigin: \"top center\",\r\n                                overflowY:\"auto\",\r\n                                maxHeight:500\r\n                            }}>\r\n                                <div style={{\r\n                                    display:\"flex\",\r\n                                    justifyContent:\"space-between\",\r\n                                    borderBottom:\"#f3f4f5 solid 1px\"\r\n                                }}>\r\n                                    <h6>\r\n                                        Keranjang ({Auth.cart.transaksiparcel.length+Auth.cart.transaksidetailsatuan.length})\r\n                                    </h6>\r\n                                    <span>\r\n                                        <Link to=\"/cart\" style={{\r\n                                            color:\"#158ae6\",\r\n                                            fontWeight:\"500\",\r\n                                            textDecorationLine:\"none\"\r\n                                            }}> <h6>Lihat Keranjang</h6></Link>\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <Scrollbars autoHeight autoHeightMin={Auth.cart.transaksiparcel.length>0||Auth.cart.transaksidetailsatuan.length>0?50:0} \r\n                                    autoHide autoHeightMax={400}>\r\n                                            \r\n                                        {Auth.cart.transaksiparcel.length>0||Auth.cart.transaksidetailsatuan.length>0?\r\n                                        renderCart()\r\n                                        // null\r\n                                        :\r\n                                        <div style={{\r\n                                            display:\"flex\",\r\n                                            justifyContent:\"center\",\r\n                                            padding:10\r\n                                        }}>\r\n                                            <span>Masih Kosong</span>    \r\n                                        </div>\r\n                                        }\r\n                                      \r\n                                    </Scrollbars>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{\r\n                        borderLeft: '1px solid white',\r\n                        paddingLeft:10,\r\n                        marginLeft:10,\r\n                        position:\"relative\",\r\n                        }}\r\n                        onMouseEnter={()=>setShowMenuUser(true)} onMouseLeave={()=>setShowMenuUser(false)}>\r\n                        <BiUser color=\"white\" size=\"20\" style={{cursor:\"pointer\"}}/> Halo, {namaPertama(Auth.nama)}\r\n                        <div style={{\r\n                            position:\"absolute\",\r\n                            display:showMenuUser?\"block\":\"none\",\r\n                            paddingTop:10,\r\n                            width:100,\r\n                        }}>\r\n                            <div style={{\r\n                                border:'1 solid white',\r\n                                borderBottomLeftRadius:10,\r\n                                borderBottomRightRadius:10,\r\n                                color:\"black\",\r\n                                padding:10,\r\n                                paddingLeft:20,\r\n                                paddingRight:20,\r\n                                boxShadow:\"#f3f4f5 0px 3px 5px 1px\",\r\n                                backgroundColor:\"white\",\r\n                                display:\"flex\",\r\n                                flexDirection:\"column\",\r\n                                animation: \"growOut 300ms ease-in-out forwards\",\r\n                                transformOrigin: \"top center\"\r\n                                // animation: \"growDown 300ms ease-in-out\"\r\n                            }}>\r\n                                <div style={{\r\n                                    display:\"flex\",\r\n                                    justifyContent:\"space-between\",\r\n                                    borderBottom:\"#f3f4f5 solid 1px\"\r\n                                }}>\r\n                                    <div>Setting</div>\r\n\r\n                                </div>\r\n                                <div style={{\r\n                                    display:\"flex\",\r\n                                    justifyContent:\"space-between\",\r\n                                    borderBottom:\"#f3f4f5 solid 1px\",\r\n                                    cursor:\"pointer\"\r\n                                }}onClick={()=>{\r\n                                    localStorage.removeItem(\"id\")\r\n                                    dispatch({type:'LOGOUT'})\r\n                                }}>\r\n                                    <div>Logout</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>  \r\n\r\n            <div style={{\r\n                display:\"flex\",\r\n                flexDirection:\"column\",\r\n                alignItems:\"center\",\r\n                width:\"100%\",\r\n                maxWidth:2000,\r\n                marginBottom:20\r\n            }}>\r\n                <div style={{\r\n                    display:\"flex\",\r\n                    width:\"80%\",\r\n                    // backgroundColor:\"wheat\",\r\n                    marginTop:50,\r\n                    justifyContent:\"center\"\r\n                }}>\r\n                    <div style={{\r\n                        flexBasis:\"50%\"\r\n                    }}>\r\n                        <div style={{\r\n                            padding:20,\r\n                            position:\"relative\",\r\n                            borderBottom:\"#f3f4f5 solid 10px\",\r\n                            paddingBottom:10,\r\n                            marginBottom:10\r\n                        }}>\r\n                            <div style={{\r\n                                borderBottom:\"#f3f4f5 solid 10px\",\r\n                                paddingBottom:10,\r\n                                marginBottom:10\r\n                            }}>\r\n                                <h6>Keranjang:</h6>\r\n                        </div>\r\n                            {Auth.cart.transaksiparcel.length>0||Auth.cart.transaksidetailsatuan.length>0?\r\n                            renderCartDetail()\r\n                            // null\r\n                            :\r\n                            <div style={{\r\n                                display:\"flex\",\r\n                                justifyContent:\"center\",\r\n                                padding:10\r\n                            }}>\r\n                                <span>Masih Kosong</span>    \r\n                            </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div style={{\r\n                        flexBasis:\"50%\",\r\n                        display:\"flex\",\r\n                        flexDirection:\"column\",\r\n                        alignItems:\"center\",\r\n                        position:\"sticky\",\r\n                        alignSelf:\"flex-start\",\r\n                        top:100\r\n                    }}>\r\n                        <div style={{\r\n                            padding:20,\r\n                            width:600\r\n                        }}>\r\n                            <div style={{\r\n                                display:\"flex\",\r\n                                flexDirection:\"column\",\r\n                                border:\"#f3f4f5 solid 1px\",\r\n                                boxShadow:\"#f3f4f5 0px 3px 5px 1px\",\r\n                                padding:30\r\n                            }}>\r\n                                <div>\r\n                                    <h6>\r\n                                        Ringkasan Belanja\r\n                                    </h6>\r\n                                </div>\r\n                                <div style={{\r\n                                    display:\"flex\",\r\n                                    justifyContent:\"space-between\"\r\n                                }}>\r\n                                    <div>\r\n                                        Total Transaksi\r\n                                    </div>\r\n                                    <div>\r\n                                        <span style={{\r\n                                            color:\"#fa5a1e\",\r\n                                            fontWeight:\"700\"\r\n                                        }}>\r\n                                            {Auth.cart.transaksi.length==1?\r\n                                                <>\r\n                                                    Rp {numeral(Auth.cart.transaksi[0].totaltransaksi).format('0,0')}\r\n                                                </>\r\n                                                :\r\n                                                \"Belum ada yang dibeli\"\r\n                                            }\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{\r\n                                    paddingTop:10,\r\n                                    paddingBottom:10,\r\n                                    borderBottom:\"5px solid whitesmoke\",\r\n                                    borderTop:\"5px solid whitesmoke\",\r\n                                    marginTop:20\r\n                                    }}>\r\n                                    <div style={{\r\n                                        display:\"flex\",\r\n                                        justifyContent:\"space-between\"\r\n                                    }}>\r\n                                        <div>\r\n                                            {\r\n                                                Auth.cart.transaksi.length==1?\r\n                                                    \"Tambah juga :\"\r\n                                                    :\r\n                                                    \"Product :\"\r\n\r\n                                            }\r\n                                        </div>\r\n                                        <div>\r\n                                            <Link to='/dataproduct'>\r\n                                                <span style={{\r\n                                                    color:\"#318ae7\",\r\n                                                    fontSize:14,\r\n                                                    cursor:\"pointer\",\r\n                                                }}>\r\n                                                    Lihat Semua\r\n                                                </span>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Scrollbars autoHeight>\r\n                                        <div style={{\r\n                                            display:\"flex\",\r\n                                            justifyContent:\"space-between\",\r\n                                            marginTop:10,\r\n                                            marginBottom:5,\r\n                                            paddingBottom:10\r\n                                        }}>\r\n                                                {renderRandomProduct()}\r\n                                        </div>\r\n                                    </Scrollbars>\r\n                                </div>\r\n                                <div style={{\r\n                                    // backgroundColor:\"wheat\",\r\n                                    display:\"flex\",\r\n                                    justifyContent:\"center\",\r\n                                    marginTop:20\r\n                                }}>\r\n                                    {Auth.cart.transaksiparcel.length || Auth.cart.transaksidetailsatuan.length?\r\n                                        <Button style={{\r\n                                            width:200\r\n                                        }} onClick={()=>setShowPembayaran(!showPembayaran)} color=\"primary\">\r\n                                            <span style={{\r\n                                                fontWeight:500\r\n                                            }}>\r\n                                                Bayar ({Auth.cart.transaksiparcel.length+Auth.cart.transaksidetailsatuan.length})\r\n                                            </span>\r\n                                        </Button>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='p-1' style={{width:'100%',maxWidth:2000, marginLeft:20,borderTop:'1px solid lightgrey',position:\"fixed\",bottom:0,paddingBottom:10, backgroundColor:\"white\"}}>\r\n                    <span style={{fontSize:'14px'}}>Â© 2020, hearttoheart</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartPage","C:\\Kevin\\BelajarCoding\\Purwadhika\\Project Akhir Kelompok 2\\FE_ProjectAkhir_Kel2\\fe_projectakhir_kel2\\src\\pages\\admin\\adminreport.jsx",["33","34","35","36","37","38","39","40","41","42"],{"ruleId":"43","severity":1,"message":"44","line":22,"column":8,"nodeType":"45","messageId":"46","endLine":22,"endColumn":16},{"ruleId":"47","severity":1,"message":"48","line":108,"column":7,"nodeType":"49","endLine":108,"endColumn":9,"suggestions":"50"},{"ruleId":"47","severity":1,"message":"51","line":112,"column":7,"nodeType":"49","endLine":112,"endColumn":24,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":215,"column":47,"nodeType":"55","messageId":"56","endLine":215,"endColumn":49},{"ruleId":"53","severity":1,"message":"54","line":286,"column":47,"nodeType":"55","messageId":"56","endLine":286,"endColumn":49},{"ruleId":"53","severity":1,"message":"54","line":418,"column":42,"nodeType":"55","messageId":"56","endLine":418,"endColumn":44},{"ruleId":"53","severity":1,"message":"54","line":422,"column":32,"nodeType":"55","messageId":"56","endLine":422,"endColumn":34},{"ruleId":"57","severity":1,"message":"58","line":437,"column":34,"nodeType":"59","messageId":"60","endLine":437,"endColumn":36},{"ruleId":"53","severity":1,"message":"54","line":455,"column":29,"nodeType":"55","messageId":"56","endLine":455,"endColumn":31},{"ruleId":"53","severity":1,"message":"54","line":476,"column":39,"nodeType":"55","messageId":"56","endLine":476,"endColumn":41},{"ruleId":"53","severity":1,"message":"54","line":478,"column":26,"nodeType":"55","messageId":"56","endLine":478,"endColumn":28},{"ruleId":"53","severity":1,"message":"54","line":548,"column":24,"nodeType":"55","messageId":"56","endLine":548,"endColumn":26},{"ruleId":"53","severity":1,"message":"54","line":569,"column":24,"nodeType":"55","messageId":"56","endLine":569,"endColumn":26},{"ruleId":"53","severity":1,"message":"54","line":614,"column":53,"nodeType":"55","messageId":"56","endLine":614,"endColumn":55},{"ruleId":"53","severity":1,"message":"54","line":618,"column":46,"nodeType":"55","messageId":"56","endLine":618,"endColumn":48},{"ruleId":"61","severity":1,"message":"62","line":713,"column":25,"nodeType":"63","endLine":713,"endColumn":82},{"ruleId":"61","severity":1,"message":"62","line":750,"column":25,"nodeType":"63","endLine":750,"endColumn":71},{"ruleId":"61","severity":1,"message":"62","line":794,"column":25,"nodeType":"63","endLine":794,"endColumn":82},{"ruleId":"61","severity":1,"message":"62","line":890,"column":25,"nodeType":"63","endLine":890,"endColumn":71},{"ruleId":"53","severity":1,"message":"54","line":1117,"column":64,"nodeType":"55","messageId":"56","endLine":1117,"endColumn":66},{"ruleId":"53","severity":1,"message":"54","line":1562,"column":72,"nodeType":"55","messageId":"56","endLine":1562,"endColumn":74},{"ruleId":"53","severity":1,"message":"54","line":1585,"column":75,"nodeType":"55","messageId":"56","endLine":1585,"endColumn":77},{"ruleId":"43","severity":1,"message":"64","line":13,"column":11,"nodeType":"45","messageId":"46","endLine":13,"endColumn":15},{"ruleId":"43","severity":1,"message":"65","line":14,"column":11,"nodeType":"45","messageId":"46","endLine":14,"endColumn":19},{"ruleId":"43","severity":1,"message":"66","line":25,"column":22,"nodeType":"45","messageId":"46","endLine":25,"endColumn":34},{"ruleId":"43","severity":1,"message":"67","line":26,"column":22,"nodeType":"45","messageId":"46","endLine":26,"endColumn":34},{"ruleId":"47","severity":1,"message":"68","line":34,"column":7,"nodeType":"49","endLine":34,"endColumn":14,"suggestions":"69"},{"ruleId":"53","severity":1,"message":"54","line":77,"column":27,"nodeType":"55","messageId":"56","endLine":77,"endColumn":29},{"ruleId":"53","severity":1,"message":"54","line":97,"column":33,"nodeType":"55","messageId":"56","endLine":97,"endColumn":35},{"ruleId":"53","severity":1,"message":"54","line":311,"column":49,"nodeType":"55","messageId":"56","endLine":311,"endColumn":51},{"ruleId":"53","severity":1,"message":"54","line":322,"column":49,"nodeType":"55","messageId":"56","endLine":322,"endColumn":51},{"ruleId":"53","severity":1,"message":"54","line":333,"column":49,"nodeType":"55","messageId":"56","endLine":333,"endColumn":51},"no-unused-vars","'Dropzone' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Auth' and 'fetchdata'. Either include them or remove the dependency array.","ArrayExpression",["70"],"React Hook useEffect has a missing dependency: 'inStatusPerCategory'. Either include it or remove the dependency array.",["71"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Auth' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'setmaxpages1' is assigned a value but never used.","'setmaxpages0' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchdatapage'. Either include it or remove the dependency array.",["72"],{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},"Update the dependencies array to be: [Auth, fetchdata]",{"range":"79","text":"80"},"Update the dependencies array to be: [inStatusPerCategory, komposisiParcel]",{"range":"81","text":"82"},"Update the dependencies array to be: [fetchdatapage, pages]",{"range":"83","text":"84"},[4238,4240],"[Auth, fetchdata]",[4303,4320],"[inStatusPerCategory, komposisiParcel]",[1404,1411],"[fetchdatapage, pages]"]